Prefix(:=<http://www.uom.gr/ai/ontologies/CalendarPrefsExamples.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(calPrefs:=<http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#>)


Ontology(<http://www.uom.gr/ai/ontologies/CalendarPrefsExample.owl>
Import(<http://www.uom.gr/ai/ontologies/CalendarPrefs.owl>)
Import(<http://www.w3.org/2006/time>)
Import(<http://www.uom.gr/ai/ontologies/Activities.owl>)

Declaration(Class(:CalendarPrefsExample))
Declaration(NamedIndividual(<http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#5MinDuration>))
Declaration(NamedIndividual(:currentJob))
Declaration(NamedIndividual(:durationA))
Declaration(NamedIndividual(:durationB))
Declaration(NamedIndividual(:homeAddress))
Declaration(NamedIndividual(:impliesPrefA))
Declaration(NamedIndividual(:impliesPrefB))
Declaration(NamedIndividual(:joggingDuration))
Declaration(NamedIndividual(:shortJoggingSession))
Declaration(NamedIndividual(:shortStretchingSession))
Declaration(NamedIndividual(:stretchingDuration))
Declaration(NamedIndividual(:timeDistPreference))
Declaration(NamedIndividual(:user1))
Declaration(NamedIndividual(:workAddress))
ClassAssertion(:CalendarPrefsExample <http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#5MinDuration>)
ClassAssertion(<http://www.w3.org/2006/time#DurationDescription> <http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#5MinDuration>)
DataPropertyAssertion(<http://www.w3.org/2006/time#minutes> <http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#5MinDuration> "5"^^xsd:nonNegativeInteger)
AnnotationAssertion(rdfs:label :currentJob "Software engineer")
ClassAssertion(:CalendarPrefsExample :currentJob)
ClassAssertion(owl:Thing :currentJob)
ClassAssertion(:CalendarPrefsExample :durationA)
ClassAssertion(<http://www.w3.org/2006/time#DurationDescription> :durationA)
DataPropertyAssertion(<http://www.w3.org/2006/time#hours> :durationA "2"^^xsd:nonNegativeInteger)
ClassAssertion(:CalendarPrefsExample :durationB)
ClassAssertion(<http://www.w3.org/2006/time#DurationDescription> :durationB)
DataPropertyAssertion(<http://www.w3.org/2006/time#hours> :durationB "3"^^xsd:nonNegativeInteger)
AnnotationAssertion(rdfs:label :homeAddress "Athens, Greece")
ClassAssertion(:CalendarPrefsExample :homeAddress)
ClassAssertion(owl:Thing :homeAddress)
ClassAssertion(calPrefs:TimeDistancePreference :impliesPrefA)
ClassAssertion(:CalendarPrefsExample :impliesPrefA)
ObjectPropertyAssertion(calPrefs:hasFirstMember :impliesPrefA <http://www.uom.gr/ai/ontologies/Activities.owl#FootballActivity>)
ObjectPropertyAssertion(calPrefs:hasMaxDuration :impliesPrefA <http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#5MinDuration>)
ObjectPropertyAssertion(calPrefs:hasOrder :impliesPrefA calPrefs:follows)
ObjectPropertyAssertion(calPrefs:hasSecondMember :impliesPrefA :shortJoggingSession)
ClassAssertion(calPrefs:TimeDistancePreference :impliesPrefB)
ClassAssertion(:CalendarPrefsExample :impliesPrefB)
ObjectPropertyAssertion(calPrefs:hasFirstMember :impliesPrefB <http://www.uom.gr/ai/ontologies/Activities.owl#FootballActivity>)
ObjectPropertyAssertion(calPrefs:hasMaxDuration :impliesPrefB <http://www.uom.gr/ai/ontologies/CalendarPrefs.owl#5MinDuration>)
ObjectPropertyAssertion(calPrefs:hasOrder :impliesPrefB calPrefs:proceeds)
ObjectPropertyAssertion(calPrefs:hasSecondMember :impliesPrefB :shortStretchingSession)
ClassAssertion(:CalendarPrefsExample :joggingDuration)
ClassAssertion(<http://www.w3.org/2006/time#DurationDescription> :joggingDuration)
DataPropertyAssertion(<http://www.w3.org/2006/time#minutes> :joggingDuration "30"^^xsd:nonNegativeInteger)
ClassAssertion(<http://www.uom.gr/ai/ontologies/Activities.owl#JoggingActivity> :shortJoggingSession)
ClassAssertion(:CalendarPrefsExample :shortJoggingSession)
ObjectPropertyAssertion(<http://www.uom.gr/ai/ontologies/Activities.owl#hasDuration> :shortJoggingSession :joggingDuration)
ClassAssertion(<http://www.uom.gr/ai/ontologies/Activities.owl#GymnasticsActivity> :shortStretchingSession)
ClassAssertion(:CalendarPrefsExample :shortStretchingSession)
ObjectPropertyAssertion(<http://www.uom.gr/ai/ontologies/Activities.owl#hasDuration> :shortStretchingSession :stretchingDuration)
ClassAssertion(:CalendarPrefsExample :stretchingDuration)
ClassAssertion(<http://www.w3.org/2006/time#DurationDescription> :stretchingDuration)
DataPropertyAssertion(<http://www.w3.org/2006/time#minutes> :stretchingDuration "15"^^xsd:nonNegativeInteger)
ClassAssertion(calPrefs:TimeDistancePreference :timeDistPreference)
ClassAssertion(:CalendarPrefsExample :timeDistPreference)
ObjectPropertyAssertion(calPrefs:hasFirstMember :timeDistPreference <http://www.uom.gr/ai/ontologies/Activities.owl#SocialActivity>)
ObjectPropertyAssertion(calPrefs:hasMinDuration :timeDistPreference :durationA)
ObjectPropertyAssertion(calPrefs:hasPrefDuration :timeDistPreference :durationB)
ObjectPropertyAssertion(calPrefs:hasSecondMember :timeDistPreference <http://www.uom.gr/ai/ontologies/Activities.owl#SportsActivity>)
ClassAssertion(calPrefs:UserProfile :user1)
ClassAssertion(:CalendarPrefsExample :user1)
ObjectPropertyAssertion(calPrefs:hasActivityPreference :user1 :impliesPrefB)
ObjectPropertyAssertion(calPrefs:hasActivityPreference :user1 :impliesPrefA)
ObjectPropertyAssertion(calPrefs:hasActivityPreference :user1 :timeDistPreference)
ObjectPropertyAssertion(calPrefs:hasCurrentWork :user1 :currentJob)
ObjectPropertyAssertion(calPrefs:hasEducationBackground :user1 calPrefs:MSc_holder)
ObjectPropertyAssertion(calPrefs:hasGender :user1 calPrefs:Male)
ObjectPropertyAssertion(calPrefs:homeLocation :user1 :homeAddress)
ObjectPropertyAssertion(calPrefs:workLocation :user1 :workAddress)
DataPropertyAssertion(calPrefs:hasAge :user1 "30"^^xsd:nonNegativeInteger)
DataPropertyAssertion(calPrefs:hasEmail :user1 "nikos.nikolaou@example.com"^^xsd:string)
DataPropertyAssertion(calPrefs:hasFirstName :user1 "Νίκος")
DataPropertyAssertion(calPrefs:hasLastName :user1 "Nikolaou")
DataPropertyAssertion(calPrefs:hasNickname :user1 "Nikolas")
AnnotationAssertion(rdfs:label :workAddress "Thessaloniki, Greece")
ClassAssertion(:CalendarPrefsExample :workAddress)
ClassAssertion(owl:Thing :workAddress)
)