Prefix(:=<http://www.uom.gr/ai/ontologies/Activities.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.uom.gr/ai/ontologies/Activities.owl>
<http://www.uom.gr/ai/ontologies/Activities.owl>

Declaration(Class(:ActiveActivity))
Declaration(Class(:ActivitiesExample))
Declaration(Class(:Activity))
Declaration(Class(:AdventurePark))
Declaration(Class(:AeroActivity))
Declaration(Class(:Air))
Declaration(Class(:AnnualInterval))
Declaration(Class(:AnnuallyTemplateActivity))
Declaration(Class(:ArcheologicalSite))
Declaration(Class(:ArtActivity))
Declaration(Class(:ArtSchoolActivity))
Declaration(Class(:AthleticCenter))
Declaration(Class(:AthleticSchoolActivity))
Declaration(Class(:AthleticsShop))
Declaration(Class(:AudioVisualActivity))
Declaration(Class(:Bar))
Declaration(Class(:BaseballActivity))
Declaration(Class(:BasketballActivity))
Declaration(Class(:BasketballCourt))
Declaration(Class(:Beach))
Declaration(Class(:BeachActivity))
Declaration(Class(:BeachBar))
Declaration(Class(:Canion))
Declaration(Class(:ChurchSchoolActivity))
Declaration(Class(:Cinema))
Declaration(Class(:ClothingShop))
Declaration(Class(:Club))
Declaration(Class(:CollegeActivity))
Declaration(Class(:CommunalActivity))
Declaration(Class(:ComplexActivity))
Declaration(Class(:ComplexDisjoinActivity))
Declaration(Class(:ComplexUnionActivity))
Declaration(Class(:CompulsoryActivity))
Declaration(Class(:ConcreteActivity))
Declaration(Class(:ConferenceActivity))
Declaration(Class(:CulturalActivity))
Declaration(Class(:CulturalVenue))
Declaration(Class(:CyclingActivity))
Declaration(Class(:DailyTemplateActivity))
Declaration(Class(:DateDescriptor))
Declaration(Class(:DateInterval))
Declaration(Class(:DateTimeDescriptor))
Declaration(Class(:DateTimeInterval))
Declaration(Class(:DayDescriptor))
Declaration(Class(:DayInterval))
Declaration(Class(:DayOfMonthDescriptor))
Declaration(Class(:DayOfWeek))
Declaration(Class(:Desert))
Declaration(Class(:DesertActivity))
Declaration(Class(:DurationDescriptor))
Declaration(Class(:EducationActivity))
Declaration(Class(:FitnessCenter))
Declaration(Class(:FoodDrinkVenue))
Declaration(Class(:FoodShop))
Declaration(Class(:FootballActivity))
Declaration(Class(:FootballCourt))
Declaration(Class(:Forest))
Declaration(Class(:ForestActivity))
Declaration(Class(:GameActivity))
Declaration(Class(:GeoLocation))
Declaration(Class(:Group))
Declaration(Class(:GymnasticsActivity))
Declaration(Class(:HousekeepingActivity))
Declaration(Class(:HumanActivity))
Declaration(Class(:IndoorActivity))
Declaration(Class(:IndoorVenue))
Declaration(Class(:JoggingActivity))
Declaration(Class(:Lake))
Declaration(Class(:LakeActivity))
Declaration(Class(:LeisureActivity))
Declaration(Class(:Mall))
Declaration(Class(:MarketActivity))
Declaration(Class(:MonthDescriptor))
Declaration(Class(:MonthInterval))
Declaration(Class(:MonthlyTemplateActivity))
Declaration(Class(:Mountain))
Declaration(Class(:MountainActivity))
Declaration(Class(:Museum))
Declaration(Class(:MusicHall))
Declaration(Class(:MusicSchoolActivity))
Declaration(Class(:OpenAirCinema))
Declaration(Class(:OpenAirTheater))
Declaration(Class(:Organisation))
Declaration(Class(:OutdoorActivity))
Declaration(Class(:OutdoorVenue))
Declaration(Class(:Park))
Declaration(Class(:Participant))
Declaration(Class(:PassiveActivity))
Declaration(Class(:PeriodicInterval))
Declaration(Class(:PeriodicTemplateActivity))
Declaration(Class(:Person))
Declaration(Class(:PhysicalGeography))
Declaration(Class(:Plaza))
Declaration(Class(:Pub))
Declaration(Class(:RecreationActivity))
Declaration(Class(:ReligiousSite))
Declaration(Class(:Restaurant))
Declaration(Class(:River))
Declaration(Class(:RiverActivity))
Declaration(Class(:RunningActivity))
Declaration(Class(:SchedulerActivity))
Declaration(Class(:SchoolActivity))
Declaration(Class(:ScientificActivity))
Declaration(Class(:Sea))
Declaration(Class(:SeaActivity))
Declaration(Class(:ShoeShop))
Declaration(Class(:Shop))
Declaration(Class(:ShoppingActivity))
Declaration(Class(:SimpleActivity))
Declaration(Class(:SimpleTemplateActivity))
Declaration(Class(:SkiingActivity))
Declaration(Class(:SocialActivity))
Declaration(Class(:SolitaryActivity))
Declaration(Class(:SportsActivity))
Declaration(Class(:SuperMarket))
Declaration(Class(:SwimmingActivity))
Declaration(Class(:SwimmingPool))
Declaration(Class(:TableTennisActivity))
Declaration(Class(:TemplateActivity))
Declaration(Class(:TemporalDescriptor))
Declaration(Class(:TennisActivity))
Declaration(Class(:TennisCourt))
Declaration(Class(:Theater))
Declaration(Class(:TimeDescriptor))
Declaration(Class(:TimeInterval))
Declaration(Class(:Transportation))
Declaration(Class(:TravelActivity))
Declaration(Class(:UniversityActivity))
Declaration(Class(:Venue))
Declaration(Class(:VolleyballActivity))
Declaration(Class(:VolleyballCourt))
Declaration(Class(:WalkingActivity))
Declaration(Class(:Water))
Declaration(Class(:WaterActivity))
Declaration(Class(:WaterPark))
Declaration(Class(:WeekInterval))
Declaration(Class(:WeeklyTemplateActivity))
Declaration(Class(:WorkActivity))
Declaration(Class(:WorkshopActivity))
Declaration(ObjectProperty(:hasActiveDomain))
Declaration(ObjectProperty(:hasDayOfWeek))
Declaration(ObjectProperty(:hasDuration))
Declaration(ObjectProperty(:hasEndTime))
Declaration(ObjectProperty(:hasLocation))
Declaration(ObjectProperty(:hasOtherParticipant))
Declaration(ObjectProperty(:hasPart))
Declaration(ObjectProperty(:hasPeriodicInterval))
Declaration(ObjectProperty(:hasPossibleVenue))
Declaration(ObjectProperty(:hasScheduledTime))
Declaration(ObjectProperty(:hasStartTime))
Declaration(ObjectProperty(:hasTemporalDescriptor))
Declaration(ObjectProperty(:hasTemporalWindow))
Declaration(ObjectProperty(:hasTimeInterval))
Declaration(ObjectProperty(:hasType))
Declaration(ObjectProperty(:hasVenue))
Declaration(ObjectProperty(:requires))
Declaration(ObjectProperty(:transportationTypeFromVenue))
Declaration(ObjectProperty(:transportationTypeToVenue))
Declaration(DataProperty(:hasDate))
Declaration(DataProperty(:hasDay))
Declaration(DataProperty(:hasDescription))
Declaration(DataProperty(:hasHour))
Declaration(DataProperty(:hasLatitude))
Declaration(DataProperty(:hasLongitude))
Declaration(DataProperty(:hasMinute))
Declaration(DataProperty(:hasMonth))
Declaration(DataProperty(:hasName))
Declaration(DataProperty(:hasSecond))
Declaration(DataProperty(:hasYear))
Declaration(NamedIndividual(:ActiveActivity))
Declaration(NamedIndividual(:AdventurePark))
Declaration(NamedIndividual(:Adventure_park))
Declaration(NamedIndividual(:AeroActivity))
Declaration(NamedIndividual(:Air))
Declaration(NamedIndividual(:ArcheologicalSite))
Declaration(NamedIndividual(:ArtActivity))
Declaration(NamedIndividual(:ArtSchoolActivity))
Declaration(NamedIndividual(:AthleticCenter))
Declaration(NamedIndividual(:AthleticSchoolActivity))
Declaration(NamedIndividual(:AthleticsShop))
Declaration(NamedIndividual(:Attending_a_wedding))
Declaration(NamedIndividual(:Attending_course))
Declaration(NamedIndividual(:AudioVisualActivity))
Declaration(NamedIndividual(:Bar))
Declaration(NamedIndividual(:BaseballActivity))
Declaration(NamedIndividual(:BasketballActivity))
Declaration(NamedIndividual(:BasketballCourt))
Declaration(NamedIndividual(:Basketball_Ball))
Declaration(NamedIndividual(:Basketball_with_friends))
Declaration(NamedIndividual(:Beach))
Declaration(NamedIndividual(:BeachActivity))
Declaration(NamedIndividual(:BeachBar))
Declaration(NamedIndividual(:Beach_soccer))
Declaration(NamedIndividual(:Beach_volley))
Declaration(NamedIndividual(:Bicycle))
Declaration(NamedIndividual(:Birdwatching))
Declaration(NamedIndividual(:Board_game))
Declaration(NamedIndividual(:Boat))
Declaration(NamedIndividual(:Boat_fishing))
Declaration(NamedIndividual(:Bungee_jumping))
Declaration(NamedIndividual(:Bus))
Declaration(NamedIndividual(:Camel_safari))
Declaration(NamedIndividual(:Camping))
Declaration(NamedIndividual(:Canion))
Declaration(NamedIndividual(:Canoeing))
Declaration(NamedIndividual(:Canyoning))
Declaration(NamedIndividual(:Car))
Declaration(NamedIndividual(:Caravan))
Declaration(NamedIndividual(:Card_game))
Declaration(NamedIndividual(:ChurchSchoolActivity))
Declaration(NamedIndividual(:Cinema))
Declaration(NamedIndividual(:Cleaning))
Declaration(NamedIndividual(:ClothingShop))
Declaration(NamedIndividual(:Clothwashing))
Declaration(NamedIndividual(:Club))
Declaration(NamedIndividual(:CollegeActivity))
Declaration(NamedIndividual(:CommunalActivity))
Declaration(NamedIndividual(:CompulsoryActivity))
Declaration(NamedIndividual(:ConferenceActivity))
Declaration(NamedIndividual(:Cooking))
Declaration(NamedIndividual(:Crafting))
Declaration(NamedIndividual(:CulturalActivity))
Declaration(NamedIndividual(:CulturalVenue))
Declaration(NamedIndividual(:CyclingActivity))
Declaration(NamedIndividual(:Desert))
Declaration(NamedIndividual(:DesertActivity))
Declaration(NamedIndividual(:Dishwashing))
Declaration(NamedIndividual(:Diving))
Declaration(NamedIndividual(:EducationActivity))
Declaration(NamedIndividual(:FRIDAY))
Declaration(NamedIndividual(:FitnessCenter))
Declaration(NamedIndividual(:FoodDrinkVenue))
Declaration(NamedIndividual(:FoodShop))
Declaration(NamedIndividual(:FootballActivity))
Declaration(NamedIndividual(:FootballCourt))
Declaration(NamedIndividual(:Forest))
Declaration(NamedIndividual(:ForestActivity))
Declaration(NamedIndividual(:GameActivity))
Declaration(NamedIndividual(:Gardening))
Declaration(NamedIndividual(:Giving_a_presentation))
Declaration(NamedIndividual(:Gliding))
Declaration(NamedIndividual(:Going_to_a_birthday_party))
Declaration(NamedIndividual(:Going_to_cloths_store))
Declaration(NamedIndividual(:Going_to_mall))
Declaration(NamedIndividual(:Going_to_shoes_store))
Declaration(NamedIndividual(:Going_to_stores))
Declaration(NamedIndividual(:Going_to_supermarket))
Declaration(NamedIndividual(:GymnasticsActivity))
Declaration(NamedIndividual(:Hot_air_ballooning))
Declaration(NamedIndividual(:HousekeepingActivity))
Declaration(NamedIndividual(:Ice_climbing))
Declaration(NamedIndividual(:IndoorActivity))
Declaration(NamedIndividual(:Ironing))
Declaration(NamedIndividual(:Jeep_safari))
Declaration(NamedIndividual(:Jet_skiing))
Declaration(NamedIndividual(:JoggingActivity))
Declaration(NamedIndividual(:John))
Declaration(NamedIndividual(:Karaoke))
Declaration(NamedIndividual(:Kayaking))
Declaration(NamedIndividual(:Kiteboating))
Declaration(NamedIndividual(:Kiteserfing))
Declaration(NamedIndividual(:Lake))
Declaration(NamedIndividual(:LakeActivity))
Declaration(NamedIndividual(:LeisureActivity))
Declaration(NamedIndividual(:Listening_to_music))
Declaration(NamedIndividual(:MONDAY))
Declaration(NamedIndividual(:Mall))
Declaration(NamedIndividual(:MarketActivity))
Declaration(NamedIndividual(:Metro))
Declaration(NamedIndividual(:Mopping))
Declaration(NamedIndividual(:Motorbike_expedition))
Declaration(NamedIndividual(:Motorcycle))
Declaration(NamedIndividual(:Mountain))
Declaration(NamedIndividual(:MountainActivity))
Declaration(NamedIndividual(:Mountain_biking))
Declaration(NamedIndividual(:Museum))
Declaration(NamedIndividual(:MusicHall))
Declaration(NamedIndividual(:MusicSchoolActivity))
Declaration(NamedIndividual(:Nick))
Declaration(NamedIndividual(:OnFoot))
Declaration(NamedIndividual(:OpenAirCinema))
Declaration(NamedIndividual(:OpenAirTheater))
Declaration(NamedIndividual(:OutdoorActivity))
Declaration(NamedIndividual(:OutdoorVenue))
Declaration(NamedIndividual(:Painting))
Declaration(NamedIndividual(:Parachuting))
Declaration(NamedIndividual(:Parasailing))
Declaration(NamedIndividual(:Park))
Declaration(NamedIndividual(:PassiveActivity))
Declaration(NamedIndividual(:Photography))
Declaration(NamedIndividual(:PhysicalGeography))
Declaration(NamedIndividual(:Playing_music))
Declaration(NamedIndividual(:Plaza))
Declaration(NamedIndividual(:Poseidonio_mpasket))
Declaration(NamedIndividual(:Preparing_a_project))
Declaration(NamedIndividual(:Pub))
Declaration(NamedIndividual(:Rafting))
Declaration(NamedIndividual(:RecreationActivity))
Declaration(NamedIndividual(:ReligiousSite))
Declaration(NamedIndividual(:Restaurant))
Declaration(NamedIndividual(:Riding))
Declaration(NamedIndividual(:River))
Declaration(NamedIndividual(:RiverActivity))
Declaration(NamedIndividual(:Rock_climbing))
Declaration(NamedIndividual(:Rollers))
Declaration(NamedIndividual(:Rowing))
Declaration(NamedIndividual(:RunningActivity))
Declaration(NamedIndividual(:SATURDAY))
Declaration(NamedIndividual(:SUNDAY))
Declaration(NamedIndividual(:Sailing))
Declaration(NamedIndividual(:SchoolActivity))
Declaration(NamedIndividual(:ScientificActivity))
Declaration(NamedIndividual(:Scuba_diving))
Declaration(NamedIndividual(:Sea))
Declaration(NamedIndividual(:SeaActivity))
Declaration(NamedIndividual(:Sea_kayaking))
Declaration(NamedIndividual(:Serfing_internet))
Declaration(NamedIndividual(:Sewing))
Declaration(NamedIndividual(:Ship))
Declaration(NamedIndividual(:ShoeShop))
Declaration(NamedIndividual(:Shop))
Declaration(NamedIndividual(:ShoppingActivity))
Declaration(NamedIndividual(:Shopping_at_the_mall))
Declaration(NamedIndividual(:Singing))
Declaration(NamedIndividual(:SkiiingActivity))
Declaration(NamedIndividual(:Skiing))
Declaration(NamedIndividual(:Sky_diving))
Declaration(NamedIndividual(:Snorkeling))
Declaration(NamedIndividual(:Snowboarding))
Declaration(NamedIndividual(:SocialActivity))
Declaration(NamedIndividual(:SolitaryActivity))
Declaration(NamedIndividual(:SportsActivity))
Declaration(NamedIndividual(:Studying))
Declaration(NamedIndividual(:Sunbathing))
Declaration(NamedIndividual(:SuperMarket))
Declaration(NamedIndividual(:SuperParadise))
Declaration(NamedIndividual(:Surfing))
Declaration(NamedIndividual(:Sweeping))
Declaration(NamedIndividual(:SwimmingActivity))
Declaration(NamedIndividual(:SwimmingPool))
Declaration(NamedIndividual(:THURSDAY))
Declaration(NamedIndividual(:TUESDAY))
Declaration(NamedIndividual(:TableTannisActivity))
Declaration(NamedIndividual(:Taking_exams))
Declaration(NamedIndividual(:Taxi))
Declaration(NamedIndividual(:TennisActivity))
Declaration(NamedIndividual(:TennisCourt))
Declaration(NamedIndividual(:Theater))
Declaration(NamedIndividual(:Train))
Declaration(NamedIndividual(:Tram))
Declaration(NamedIndividual(:TravelActivity))
Declaration(NamedIndividual(:Tree_climbing))
Declaration(NamedIndividual(:Trekking))
Declaration(NamedIndividual(:Underwater_photography))
Declaration(NamedIndividual(:UniversityActivity))
Declaration(NamedIndividual(:Vacuuming))
Declaration(NamedIndividual(:Video_game))
Declaration(NamedIndividual(:VisitingArcheologicalSight))
Declaration(NamedIndividual(:VisitingCinema))
Declaration(NamedIndividual(:VisitingMuseum))
Declaration(NamedIndividual(:VisitingTheater))
Declaration(NamedIndividual(:Visiting_others))
Declaration(NamedIndividual(:VolleyballActivity))
Declaration(NamedIndividual(:VolleyballCourt))
Declaration(NamedIndividual(:WEDNESDAY))
Declaration(NamedIndividual(:WalkingActivity))
Declaration(NamedIndividual(:Wallet))
Declaration(NamedIndividual(:Watching_movie))
Declaration(NamedIndividual(:Watching_tv))
Declaration(NamedIndividual(:Water))
Declaration(NamedIndividual(:WaterActivity))
Declaration(NamedIndividual(:WaterPark))
Declaration(NamedIndividual(:Waterskiing))
Declaration(NamedIndividual(:Wildlife_safari))
Declaration(NamedIndividual(:Windsurfing))
Declaration(NamedIndividual(:WorkActivity))
Declaration(NamedIndividual(:WorkshopActivity))
Declaration(NamedIndividual(:Writing_a_paper))
Declaration(NamedIndividual(:Writing_a_presentation))
Declaration(NamedIndividual(:Yachting))
Declaration(NamedIndividual(:indoorVenue))
Declaration(NamedIndividual(:inst1))
Declaration(NamedIndividual(:inst2))
Declaration(NamedIndividual(:posLocation))
Declaration(NamedIndividual(:spLocation))
SubClassOf(:ActiveActivity :HumanActivity)
DisjointClasses(:ActiveActivity :PassiveActivity)
SubClassOf(:Activity DataSomeValuesFrom(:hasDescription xsd:string))
SubClassOf(:Activity DataSomeValuesFrom(:hasName xsd:string))
DisjointUnion(:Activity :SimpleActivity :ComplexActivity)
SubClassOf(:AdventurePark :Park)
EquivalentClasses(:AeroActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :Air) :OutdoorActivity))
SubClassOf(:AeroActivity :OutdoorActivity)
SubClassOf(:Air :PhysicalGeography)
SubClassOf(:AnnualInterval :PeriodicInterval)
SubClassOf(:AnnualInterval ObjectSomeValuesFrom(:hasTemporalDescriptor :MonthDescriptor))
SubClassOf(:AnnuallyTemplateActivity :PeriodicTemplateActivity)
SubClassOf(:AnnuallyTemplateActivity ObjectSomeValuesFrom(:hasPeriodicInterval :AnnualInterval))
SubClassOf(:ArcheologicalSite :CulturalVenue)
SubClassOf(:ArcheologicalSite :OutdoorVenue)
SubClassOf(:ArtActivity :IndoorActivity)
SubClassOf(:ArtSchoolActivity :SchoolActivity)
SubClassOf(:AthleticCenter :Venue)
SubClassOf(:AthleticSchoolActivity :SchoolActivity)
SubClassOf(:AthleticsShop :Shop)
SubClassOf(:AudioVisualActivity :IndoorActivity)
SubClassOf(:Bar :FoodDrinkVenue)
SubClassOf(:BaseballActivity :SportsActivity)
SubClassOf(:BasketballActivity :SportsActivity)
SubClassOf(:BasketballCourt :AthleticCenter)
SubClassOf(:Beach :PhysicalGeography)
EquivalentClasses(:BeachActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :Beach) :OutdoorActivity))
SubClassOf(:BeachActivity :OutdoorActivity)
SubClassOf(:BeachBar :Bar)
SubClassOf(:BeachBar :Beach)
SubClassOf(:Canion :PhysicalGeography)
SubClassOf(:ChurchSchoolActivity :SchoolActivity)
SubClassOf(:Cinema :CulturalVenue)
SubClassOf(:ClothingShop :Shop)
SubClassOf(:Club :FoodDrinkVenue)
SubClassOf(:CollegeActivity :SchoolActivity)
EquivalentClasses(:CommunalActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasOtherParticipant :Participant) :HumanActivity))
SubClassOf(:CommunalActivity :HumanActivity)
EquivalentClasses(:ComplexActivity ObjectSomeValuesFrom(:hasPart :Activity))
SubClassOf(:ComplexActivity :Activity)
DisjointUnion(:ComplexActivity :ComplexUnionActivity :ComplexDisjoinActivity)
SubClassOf(:ComplexDisjoinActivity :ComplexActivity)
SubClassOf(:ComplexUnionActivity :ComplexActivity)
AnnotationAssertion(rdfs:label :CompulsoryActivity "Compulsory Activity"@en)
AnnotationAssertion(rdfs:label :CompulsoryActivity "Υποχρεωτική Δραστηριότητα"@el)
AnnotationAssertion(rdfs:comment :CompulsoryActivity "An activity is consider as a cumpulsory activity, when it is posed by the human nature, like sleeping ar eating"@en)
AnnotationAssertion(rdfs:comment :CompulsoryActivity "Μια δραστηριότητα θεωρείται υποχρεωτική όταν η φύση του ανθρώπου το επιβάλει, όπως για παράδειγμα: ύπνος, φαγητό"@el)
SubClassOf(:CompulsoryActivity :HumanActivity)
SubClassOf(:ConcreteActivity :HumanActivity)
SubClassOf(:ConcreteActivity ObjectSomeValuesFrom(:hasDuration :DurationDescriptor))
SubClassOf(:ConcreteActivity ObjectSomeValuesFrom(:hasScheduledTime :DateTimeInterval))
SubClassOf(:ConcreteActivity ObjectSomeValuesFrom(:hasVenue :Venue))
DisjointClasses(:ConcreteActivity :TemplateActivity)
SubClassOf(:ConferenceActivity :ScientificActivity)
EquivalentClasses(:CulturalActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :CulturalVenue) :OutdoorActivity))
SubClassOf(:CulturalActivity :OutdoorActivity)
SubClassOf(:CulturalVenue :Venue)
SubClassOf(:CyclingActivity :SportsActivity)
SubClassOf(:DailyTemplateActivity :PeriodicTemplateActivity)
SubClassOf(:DailyTemplateActivity ObjectSomeValuesFrom(:hasPeriodicInterval :DayInterval))
SubClassOf(:DateDescriptor :TemporalDescriptor)
SubClassOf(:DateDescriptor DataExactCardinality(1 :hasDay xsd:nonNegativeInteger))
SubClassOf(:DateDescriptor DataExactCardinality(1 :hasMonth xsd:nonNegativeInteger))
SubClassOf(:DateDescriptor DataExactCardinality(1 :hasYear xsd:nonNegativeInteger))
EquivalentClasses(:DateInterval ObjectIntersectionOf(ObjectExactCardinality(1 :hasStartTime :DateDescriptor) ObjectExactCardinality(1 :hasEndTime :DateDescriptor)))
SubClassOf(:DateTimeDescriptor :TemporalDescriptor)
SubClassOf(:DateTimeDescriptor ObjectIntersectionOf(:TimeDescriptor :DateDescriptor))
EquivalentClasses(:DateTimeInterval ObjectIntersectionOf(ObjectExactCardinality(1 :hasStartTime :DateTimeDescriptor) ObjectExactCardinality(1 :hasEndTime :DateTimeDescriptor)))
SubClassOf(:DayDescriptor :TemporalDescriptor)
SubClassOf(:DayDescriptor ObjectExactCardinality(1 :hasDayOfWeek :DayOfWeek))
SubClassOf(:DayInterval :PeriodicInterval)
SubClassOf(:DayOfMonthDescriptor :TemporalDescriptor)
SubClassOf(:DayOfMonthDescriptor DataExactCardinality(1 :hasDay xsd:nonNegativeInteger))
EquivalentClasses(:DayOfWeek ObjectOneOf(:SUNDAY :SATURDAY :WEDNESDAY :TUESDAY :FRIDAY :MONDAY :THURSDAY))
SubClassOf(:Desert :PhysicalGeography)
EquivalentClasses(:DesertActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :Desert) :OutdoorActivity))
SubClassOf(:DesertActivity :OutdoorActivity)
SubClassOf(:DurationDescriptor :TemporalDescriptor)
SubClassOf(:DurationDescriptor DataMaxCardinality(1 :hasDay xsd:nonNegativeInteger))
SubClassOf(:DurationDescriptor DataMaxCardinality(1 :hasHour xsd:nonNegativeInteger))
SubClassOf(:DurationDescriptor DataMaxCardinality(1 :hasMinute xsd:nonNegativeInteger))
SubClassOf(:DurationDescriptor DataMaxCardinality(1 :hasSecond xsd:nonNegativeInteger))
SubClassOf(:EducationActivity :HumanActivity)
DisjointClasses(:EducationActivity :LeisureActivity)
SubClassOf(:FitnessCenter :IndoorVenue)
SubClassOf(:FitnessCenter :Venue)
SubClassOf(:FoodDrinkVenue :Venue)
SubClassOf(:FoodShop :Shop)
SubClassOf(:FootballActivity :SportsActivity)
SubClassOf(:FootballCourt :AthleticCenter)
SubClassOf(:Forest :PhysicalGeography)
EquivalentClasses(:ForestActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :Forest) :OutdoorActivity))
SubClassOf(:ForestActivity :OutdoorActivity)
SubClassOf(:GameActivity :IndoorActivity)
EquivalentClasses(:GeoLocation ObjectIntersectionOf(DataSomeValuesFrom(:hasLongitude xsd:double) DataSomeValuesFrom(:hasLatitude xsd:double)))
SubClassOf(:Group :Participant)
SubClassOf(:GymnasticsActivity :SportsActivity)
SubClassOf(:HousekeepingActivity :IndoorActivity)
SubClassOf(:HumanActivity :SimpleActivity)
SubClassOf(:HumanActivity ObjectSomeValuesFrom(:requires owl:Thing))
SubClassOf(:HumanActivity ObjectSomeValuesFrom(:transportationTypeFromVenue owl:Thing))
SubClassOf(:HumanActivity ObjectSomeValuesFrom(:transportationTypeToVenue owl:Thing))
DisjointUnion(:HumanActivity :PassiveActivity :ActiveActivity)
DisjointUnion(:HumanActivity :SolitaryActivity :CommunalActivity)
SubClassOf(:IndoorActivity :HumanActivity)
SubClassOf(:IndoorActivity ObjectSomeValuesFrom(:hasVenue :IndoorVenue))
SubClassOf(:IndoorVenue :Venue)
SubClassOf(:JoggingActivity :SportsActivity)
SubClassOf(:Lake :Water)
EquivalentClasses(:LakeActivity ObjectSomeValuesFrom(:hasVenue :Lake))
SubClassOf(:LakeActivity :WaterActivity)
SubClassOf(:LeisureActivity :HumanActivity)
DisjointClasses(:LeisureActivity :WorkActivity)
SubClassOf(:Mall :Venue)
SubClassOf(:MarketActivity :OutdoorActivity)
SubClassOf(:MonthDescriptor :TemporalDescriptor)
SubClassOf(:MonthDescriptor DataExactCardinality(1 :hasMonth xsd:nonNegativeInteger))
SubClassOf(:MonthInterval :PeriodicInterval)
SubClassOf(:MonthInterval ObjectSomeValuesFrom(:hasTemporalDescriptor :DayOfMonthDescriptor))
SubClassOf(:MonthlyTemplateActivity :PeriodicTemplateActivity)
SubClassOf(:MonthlyTemplateActivity ObjectSomeValuesFrom(:hasPeriodicInterval :MonthInterval))
SubClassOf(:Mountain :PhysicalGeography)
EquivalentClasses(:MountainActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :Mountain) :OutdoorActivity))
SubClassOf(:MountainActivity :OutdoorActivity)
SubClassOf(:Museum :CulturalVenue)
SubClassOf(:Museum :IndoorVenue)
SubClassOf(:MusicHall :IndoorVenue)
SubClassOf(:MusicHall :Venue)
SubClassOf(:MusicSchoolActivity :SchoolActivity)
SubClassOf(:OpenAirCinema :Cinema)
SubClassOf(:OpenAirCinema :OutdoorVenue)
SubClassOf(:OpenAirTheater :OutdoorVenue)
SubClassOf(:OpenAirTheater :Theater)
SubClassOf(:Organisation :Participant)
SubClassOf(:OutdoorActivity :HumanActivity)
SubClassOf(:OutdoorActivity ObjectSomeValuesFrom(:hasVenue :OutdoorVenue))
SubClassOf(:OutdoorVenue :Venue)
SubClassOf(:Park :OutdoorVenue)
SubClassOf(:Park :Venue)
AnnotationAssertion(rdfs:comment :Participant "We do not use FOAF ontology, because it is not OWL 2 DL compatible, mainly because it relies on inverse functional datatype properties (http://www.w3.org/wiki/Good_Ontologies)
However, we can easiliy trasform the ontology to become OWL 2 DL compatible (http://www.mindswap.org/2005/foaf_cleaner/)"@en)
DisjointUnion(:Participant :Group :Organisation :Person)
SubClassOf(:PassiveActivity :HumanActivity)
SubClassOf(:PeriodicInterval ObjectSomeValuesFrom(:hasTimeInterval :TimeInterval))
SubClassOf(:PeriodicTemplateActivity :TemplateActivity)
SubClassOf(:PeriodicTemplateActivity ObjectSomeValuesFrom(:hasPeriodicInterval :PeriodicInterval))
DisjointUnion(:PeriodicTemplateActivity :AnnuallyTemplateActivity :DailyTemplateActivity :MonthlyTemplateActivity :WeeklyTemplateActivity)
SubClassOf(:Person :Participant)
SubClassOf(:PhysicalGeography :Venue)
SubClassOf(:Plaza :OutdoorVenue)
SubClassOf(:Plaza :Venue)
SubClassOf(:Pub :FoodDrinkVenue)
SubClassOf(:RecreationActivity :HumanActivity)
SubClassOf(:ReligiousSite :CulturalVenue)
SubClassOf(:Restaurant :FoodDrinkVenue)
SubClassOf(:River :Water)
EquivalentClasses(:RiverActivity ObjectSomeValuesFrom(:hasVenue :River))
SubClassOf(:RiverActivity :WaterActivity)
SubClassOf(:RunningActivity :SportsActivity)
SubClassOf(:SchedulerActivity :HumanActivity)
DisjointUnion(:SchedulerActivity :TemplateActivity :ConcreteActivity)
SubClassOf(:SchoolActivity :EducationActivity)
SubClassOf(:ScientificActivity :EducationActivity)
SubClassOf(:Sea :Water)
EquivalentClasses(:SeaActivity ObjectSomeValuesFrom(:hasVenue :Sea))
SubClassOf(:SeaActivity :WaterActivity)
SubClassOf(:ShoeShop :Shop)
SubClassOf(:Shop :IndoorVenue)
SubClassOf(:ShoppingActivity :MarketActivity)
SubClassOf(:SimpleActivity :Activity)
SubClassOf(:SimpleTemplateActivity :TemplateActivity)
SubClassOf(:SimpleTemplateActivity ObjectSomeValuesFrom(:hasTemporalWindow :DateTimeInterval))
SubClassOf(:SkiingActivity :SportsActivity)
SubClassOf(:SocialActivity :CommunalActivity)
EquivalentClasses(:SolitaryActivity ObjectIntersectionOf(ObjectComplementOf(:CommunalActivity) :HumanActivity))
SubClassOf(:SolitaryActivity :HumanActivity)
SubClassOf(:SportsActivity :LeisureActivity)
SubClassOf(:SuperMarket :IndoorVenue)
SubClassOf(:SuperMarket :Venue)
SubClassOf(:SwimmingActivity :SportsActivity)
SubClassOf(:SwimmingPool :AthleticCenter)
SubClassOf(:TableTennisActivity :SportsActivity)
SubClassOf(:TemplateActivity :HumanActivity)
SubClassOf(:TemplateActivity ObjectSomeValuesFrom(:hasPossibleVenue :Venue))
SubClassOf(:TemplateActivity ObjectExactCardinality(1 :hasActiveDomain :DateInterval))
DisjointUnion(:TemplateActivity :SimpleTemplateActivity :PeriodicTemplateActivity)
SubClassOf(:TennisActivity :SportsActivity)
SubClassOf(:TennisCourt :AthleticCenter)
SubClassOf(:Theater :CulturalVenue)
SubClassOf(:TimeDescriptor :TemporalDescriptor)
SubClassOf(:TimeDescriptor DataExactCardinality(1 :hasHour xsd:nonNegativeInteger))
SubClassOf(:TimeDescriptor DataExactCardinality(1 :hasMinute xsd:nonNegativeInteger))
SubClassOf(:TimeDescriptor DataMaxCardinality(1 :hasSecond xsd:nonNegativeInteger))
EquivalentClasses(:TimeInterval ObjectIntersectionOf(ObjectExactCardinality(1 :hasStartTime :TimeDescriptor) ObjectExactCardinality(1 :hasEndTime :TimeDescriptor)))
EquivalentClasses(:Transportation ObjectOneOf(:Bicycle :Metro :OnFoot :Car :Tram :Rollers :Caravan :Train :Boat :Bus :Taxi :Ship :Motorcycle))
SubClassOf(:TravelActivity :HumanActivity)
SubClassOf(:UniversityActivity :SchoolActivity)
SubClassOf(:UniversityActivity :ScientificActivity)
SubClassOf(:Venue ObjectSomeValuesFrom(:hasLocation :GeoLocation))
SubClassOf(:Venue DataSomeValuesFrom(:hasDescription xsd:string))
SubClassOf(:Venue DataSomeValuesFrom(:hasName xsd:string))
SubClassOf(:VolleyballActivity :SportsActivity)
SubClassOf(:VolleyballCourt :AthleticCenter)
SubClassOf(:WalkingActivity :SportsActivity)
SubClassOf(:Water :PhysicalGeography)
EquivalentClasses(:WaterActivity ObjectIntersectionOf(ObjectSomeValuesFrom(:hasVenue :Water) :OutdoorActivity))
SubClassOf(:WaterActivity :OutdoorActivity)
SubClassOf(:WaterPark :Park)
SubClassOf(:WeekInterval :PeriodicInterval)
SubClassOf(:WeekInterval ObjectSomeValuesFrom(:hasTemporalDescriptor :DayDescriptor))
SubClassOf(:WeeklyTemplateActivity :PeriodicTemplateActivity)
SubClassOf(:WeeklyTemplateActivity ObjectSomeValuesFrom(:hasPeriodicInterval :WeekInterval))
SubClassOf(:WorkActivity :HumanActivity)
SubClassOf(:WorkshopActivity :ScientificActivity)
ObjectPropertyRange(:hasDayOfWeek :DayOfWeek)
ObjectPropertyRange(:hasDuration :DurationDescriptor)
FunctionalObjectProperty(:hasEndTime)
ObjectPropertyDomain(:hasLocation :Venue)
ObjectPropertyRange(:hasLocation :GeoLocation)
SubObjectPropertyOf(:hasPeriodicInterval owl:topObjectProperty)
ObjectPropertyRange(:hasPeriodicInterval :PeriodicInterval)
ObjectPropertyRange(:hasPossibleVenue :Venue)
FunctionalObjectProperty(:hasStartTime)
ObjectPropertyRange(:hasTemporalDescriptor :TemporalDescriptor)
FunctionalObjectProperty(:hasVenue)
ObjectPropertyRange(:hasVenue :Venue)
AnnotationAssertion(rdfs:comment :requires "Μια δραστηριότητα πιθανώς να απαιτεί ένα ή περισσότερα πραγματα. Για παράδειγμα, η παρακολούθηση ενός αγώνα μπάσκετ, μπορεί να απαιτεί να έχουμε μαζί μας ένα εισιτήριο"@el)
AnnotationAssertion(rdfs:comment :requires "An activity may require one or more things. Fox example, watching a basketball game may require to have a ticket with you"@en)
ObjectPropertyRange(:transportationTypeFromVenue :Transportation)
ObjectPropertyRange(:transportationTypeToVenue :Transportation)
DataPropertyRange(:hasDate xsd:dateTime)
DataPropertyRange(:hasDay xsd:nonNegativeInteger)
DataPropertyRange(:hasHour xsd:nonNegativeInteger)
FunctionalDataProperty(:hasLatitude)
DataPropertyRange(:hasLatitude xsd:double)
FunctionalDataProperty(:hasLongitude)
DataPropertyRange(:hasLongitude xsd:double)
DataPropertyRange(:hasMinute xsd:nonNegativeInteger)
DataPropertyRange(:hasMonth xsd:nonNegativeInteger)
DataPropertyRange(:hasName xsd:string)
DataPropertyRange(:hasSecond xsd:nonNegativeInteger)
DataPropertyRange(:hasYear xsd:nonNegativeInteger)
ClassAssertion(:ActiveActivity :ActiveActivity)
ClassAssertion(:AdventurePark :AdventurePark)
ClassAssertion(:ActivitiesExample :Adventure_park)
ClassAssertion(:ForestActivity :Adventure_park)
ClassAssertion(:AeroActivity :AeroActivity)
ClassAssertion(:Air :Air)
ClassAssertion(:ArcheologicalSite :ArcheologicalSite)
ClassAssertion(:ArtActivity :ArtActivity)
ClassAssertion(:ArtSchoolActivity :ArtSchoolActivity)
ClassAssertion(:AthleticCenter :AthleticCenter)
ClassAssertion(:AthleticSchoolActivity :AthleticSchoolActivity)
ClassAssertion(:AthleticsShop :AthleticsShop)
ClassAssertion(:ActivitiesExample :Attending_a_wedding)
ClassAssertion(:SocialActivity :Attending_a_wedding)
ClassAssertion(:ActivitiesExample :Attending_course)
ClassAssertion(:SchoolActivity :Attending_course)
ClassAssertion(:AudioVisualActivity :AudioVisualActivity)
ClassAssertion(:Bar :Bar)
ClassAssertion(:BaseballActivity :BaseballActivity)
ClassAssertion(:BasketballActivity :BasketballActivity)
ClassAssertion(:BasketballCourt :BasketballCourt)
AnnotationAssertion(rdfs:comment :Basketball_Ball "Η μπάλα του μπάσκετ"@el)
ClassAssertion(owl:Thing :Basketball_Ball)
ClassAssertion(:ActivitiesExample :Basketball_with_friends)
ClassAssertion(:SportsActivity :Basketball_with_friends)
ObjectPropertyAssertion(:hasEndTime :Basketball_with_friends :inst2)
ObjectPropertyAssertion(:hasOtherParticipant :Basketball_with_friends :Nick)
ObjectPropertyAssertion(:hasOtherParticipant :Basketball_with_friends :John)
ObjectPropertyAssertion(:hasStartTime :Basketball_with_friends :inst1)
ObjectPropertyAssertion(:hasVenue :Basketball_with_friends :Poseidonio_mpasket)
ObjectPropertyAssertion(:requires :Basketball_with_friends :Basketball_Ball)
ObjectPropertyAssertion(:requires :Basketball_with_friends :Wallet)
ObjectPropertyAssertion(:transportationTypeFromVenue :Basketball_with_friends :Taxi)
ObjectPropertyAssertion(:transportationTypeToVenue :Basketball_with_friends :Bus)
ObjectPropertyAssertion(:transportationTypeToVenue :Basketball_with_friends :OnFoot)
ClassAssertion(:Beach :Beach)
ClassAssertion(:BeachActivity :BeachActivity)
ClassAssertion(:BeachBar :BeachBar)
ClassAssertion(:ActivitiesExample :Beach_soccer)
ClassAssertion(:BeachActivity :Beach_soccer)
ClassAssertion(:ActivitiesExample :Beach_volley)
ClassAssertion(:BeachActivity :Beach_volley)
ClassAssertion(:Transportation :Bicycle)
ClassAssertion(:ActivitiesExample :Birdwatching)
ClassAssertion(:ForestActivity :Birdwatching)
ClassAssertion(:ActivitiesExample :Board_game)
ClassAssertion(:GameActivity :Board_game)
ClassAssertion(:Transportation :Boat)
ClassAssertion(:ActivitiesExample :Boat_fishing)
ClassAssertion(:SeaActivity :Boat_fishing)
ClassAssertion(:ActivitiesExample :Bungee_jumping)
ClassAssertion(:AeroActivity :Bungee_jumping)
ClassAssertion(:Transportation :Bus)
ClassAssertion(:ActivitiesExample :Camel_safari)
ClassAssertion(:DesertActivity :Camel_safari)
ClassAssertion(:ActivitiesExample :Camping)
ClassAssertion(:ForestActivity :Camping)
ClassAssertion(:Canion :Canion)
ClassAssertion(:ActivitiesExample :Canoeing)
ClassAssertion(:RiverActivity :Canoeing)
ClassAssertion(:ActivitiesExample :Canyoning)
ClassAssertion(:MountainActivity :Canyoning)
ClassAssertion(:Transportation :Car)
ClassAssertion(:Transportation :Caravan)
ClassAssertion(:ActivitiesExample :Card_game)
ClassAssertion(:GameActivity :Card_game)
ClassAssertion(:ChurchSchoolActivity :ChurchSchoolActivity)
ClassAssertion(:Cinema :Cinema)
ClassAssertion(:ActivitiesExample :Cleaning)
ClassAssertion(:HousekeepingActivity :Cleaning)
ClassAssertion(:ClothingShop :ClothingShop)
ClassAssertion(:ActivitiesExample :Clothwashing)
ClassAssertion(:HousekeepingActivity :Clothwashing)
ClassAssertion(:Club :Club)
ClassAssertion(:CollegeActivity :CollegeActivity)
ClassAssertion(:CommunalActivity :CommunalActivity)
AnnotationAssertion(rdfs:label :CompulsoryActivity "Compulsory Activity"@en)
AnnotationAssertion(rdfs:label :CompulsoryActivity "Υποχρεωτική Δραστηριότητα"@el)
AnnotationAssertion(rdfs:comment :CompulsoryActivity "An activity is consider as a cumpulsory activity, when it is posed by the human nature, like sleeping ar eating"@en)
AnnotationAssertion(rdfs:comment :CompulsoryActivity "Μια δραστηριότητα θεωρείται υποχρεωτική όταν η φύση του ανθρώπου το επιβάλει, όπως για παράδειγμα: ύπνος, φαγητό"@el)
ClassAssertion(:CompulsoryActivity :CompulsoryActivity)
ClassAssertion(:ConferenceActivity :ConferenceActivity)
ClassAssertion(:ActivitiesExample :Cooking)
ClassAssertion(:HousekeepingActivity :Cooking)
ClassAssertion(:ActivitiesExample :Crafting)
ClassAssertion(:ArtActivity :Crafting)
ClassAssertion(:CulturalActivity :CulturalActivity)
ClassAssertion(:CulturalVenue :CulturalVenue)
ClassAssertion(:CyclingActivity :CyclingActivity)
ClassAssertion(:Desert :Desert)
ClassAssertion(:DesertActivity :DesertActivity)
ClassAssertion(:ActivitiesExample :Dishwashing)
ClassAssertion(:HousekeepingActivity :Dishwashing)
ClassAssertion(:ActivitiesExample :Diving)
ClassAssertion(:SeaActivity :Diving)
ClassAssertion(:EducationActivity :EducationActivity)
ClassAssertion(:DayOfWeek :FRIDAY)
ClassAssertion(:FitnessCenter :FitnessCenter)
ClassAssertion(:FoodDrinkVenue :FoodDrinkVenue)
ClassAssertion(:FoodShop :FoodShop)
ClassAssertion(:FootballActivity :FootballActivity)
ClassAssertion(:FootballCourt :FootballCourt)
ClassAssertion(:Forest :Forest)
ClassAssertion(:ForestActivity :ForestActivity)
ClassAssertion(:GameActivity :GameActivity)
ClassAssertion(:ActivitiesExample :Gardening)
ClassAssertion(:HousekeepingActivity :Gardening)
ClassAssertion(:ActivitiesExample :Giving_a_presentation)
ClassAssertion(:EducationActivity :Giving_a_presentation)
ClassAssertion(:ActivitiesExample :Gliding)
ClassAssertion(:AeroActivity :Gliding)
ClassAssertion(:ActivitiesExample :Going_to_a_birthday_party)
ClassAssertion(:SocialActivity :Going_to_a_birthday_party)
ClassAssertion(:ActivitiesExample :Going_to_cloths_store)
ClassAssertion(:ShoppingActivity :Going_to_cloths_store)
ClassAssertion(:ActivitiesExample :Going_to_mall)
ClassAssertion(:ShoppingActivity :Going_to_mall)
ClassAssertion(:ActivitiesExample :Going_to_shoes_store)
ClassAssertion(:ShoppingActivity :Going_to_shoes_store)
ClassAssertion(:ActivitiesExample :Going_to_stores)
ClassAssertion(:ShoppingActivity :Going_to_stores)
ClassAssertion(:ActivitiesExample :Going_to_supermarket)
ClassAssertion(:ShoppingActivity :Going_to_supermarket)
ClassAssertion(:GymnasticsActivity :GymnasticsActivity)
ClassAssertion(:ActivitiesExample :Hot_air_ballooning)
ClassAssertion(:AeroActivity :Hot_air_ballooning)
ClassAssertion(:HousekeepingActivity :HousekeepingActivity)
ClassAssertion(:ActivitiesExample :Ice_climbing)
ClassAssertion(:MountainActivity :Ice_climbing)
ClassAssertion(:IndoorActivity :IndoorActivity)
ClassAssertion(:ActivitiesExample :Ironing)
ClassAssertion(:HousekeepingActivity :Ironing)
ClassAssertion(:ActivitiesExample :Jeep_safari)
ClassAssertion(:DesertActivity :Jeep_safari)
ClassAssertion(:ActivitiesExample :Jet_skiing)
ClassAssertion(:SeaActivity :Jet_skiing)
ClassAssertion(:JoggingActivity :JoggingActivity)
ClassAssertion(:Person :John)
ClassAssertion(:ActivitiesExample :Karaoke)
ClassAssertion(:AudioVisualActivity :Karaoke)
ClassAssertion(:ActivitiesExample :Kayaking)
ClassAssertion(:RiverActivity :Kayaking)
ClassAssertion(:ActivitiesExample :Kiteboating)
ClassAssertion(:SeaActivity :Kiteboating)
ClassAssertion(:ActivitiesExample :Kiteserfing)
ClassAssertion(:SeaActivity :Kiteserfing)
ClassAssertion(:Lake :Lake)
ClassAssertion(:LakeActivity :LakeActivity)
ClassAssertion(:LeisureActivity :LeisureActivity)
ClassAssertion(:ActivitiesExample :Listening_to_music)
ClassAssertion(:AudioVisualActivity :Listening_to_music)
ClassAssertion(:DayOfWeek :MONDAY)
ClassAssertion(:Mall :Mall)
ClassAssertion(:MarketActivity :MarketActivity)
ClassAssertion(:Transportation :Metro)
ClassAssertion(:ActivitiesExample :Mopping)
ClassAssertion(:HousekeepingActivity :Mopping)
ClassAssertion(:ActivitiesExample :Motorbike_expedition)
ClassAssertion(:MountainActivity :Motorbike_expedition)
ClassAssertion(:Transportation :Motorcycle)
ClassAssertion(:Mountain :Mountain)
ClassAssertion(:MountainActivity :MountainActivity)
ClassAssertion(:ActivitiesExample :Mountain_biking)
ClassAssertion(:MountainActivity :Mountain_biking)
ClassAssertion(:Museum :Museum)
ClassAssertion(:MusicHall :MusicHall)
ClassAssertion(:MusicSchoolActivity :MusicSchoolActivity)
ClassAssertion(:Person :Nick)
ClassAssertion(:Transportation :OnFoot)
ClassAssertion(:OpenAirCinema :OpenAirCinema)
ClassAssertion(:OpenAirTheater :OpenAirTheater)
ClassAssertion(:OutdoorActivity :OutdoorActivity)
ClassAssertion(:OutdoorVenue :OutdoorVenue)
ClassAssertion(:ActivitiesExample :Painting)
ClassAssertion(:ArtActivity :Painting)
ClassAssertion(:ActivitiesExample :Parachuting)
ClassAssertion(:AeroActivity :Parachuting)
ClassAssertion(:ActivitiesExample :Parasailing)
ClassAssertion(:SeaActivity :Parasailing)
ClassAssertion(:Park :Park)
ClassAssertion(:PassiveActivity :PassiveActivity)
ClassAssertion(:ActivitiesExample :Photography)
ClassAssertion(:OutdoorActivity :Photography)
ClassAssertion(:PhysicalGeography :PhysicalGeography)
ClassAssertion(:ActivitiesExample :Playing_music)
ClassAssertion(:ArtActivity :Playing_music)
ClassAssertion(:Plaza :Plaza)
ClassAssertion(:ActivitiesExample :Poseidonio_mpasket)
ClassAssertion(:BasketballCourt :Poseidonio_mpasket)
DataPropertyAssertion(:hasName :Poseidonio_mpasket "Ποσειδώνειο Αθλητικό Κέντρο Θεσσαλονίκης"^^xsd:string)
ClassAssertion(:ActivitiesExample :Preparing_a_project)
ClassAssertion(:EducationActivity :Preparing_a_project)
ClassAssertion(:Pub :Pub)
ClassAssertion(:ActivitiesExample :Rafting)
ClassAssertion(:RiverActivity :Rafting)
ClassAssertion(:RecreationActivity :RecreationActivity)
ClassAssertion(:ReligiousSite :ReligiousSite)
ClassAssertion(:Restaurant :Restaurant)
ClassAssertion(:ActivitiesExample :Riding)
ClassAssertion(:ForestActivity :Riding)
ClassAssertion(:River :River)
ClassAssertion(:RiverActivity :RiverActivity)
ClassAssertion(:ActivitiesExample :Rock_climbing)
ClassAssertion(:MountainActivity :Rock_climbing)
ClassAssertion(:Transportation :Rollers)
ClassAssertion(:ActivitiesExample :Rowing)
ClassAssertion(:WaterActivity :Rowing)
ClassAssertion(:RunningActivity :RunningActivity)
ClassAssertion(:DayOfWeek :SATURDAY)
ClassAssertion(:DayOfWeek :SUNDAY)
ClassAssertion(:ActivitiesExample :Sailing)
ClassAssertion(:SeaActivity :Sailing)
ClassAssertion(:SchoolActivity :SchoolActivity)
ClassAssertion(:ScientificActivity :ScientificActivity)
ClassAssertion(:ActivitiesExample :Scuba_diving)
ClassAssertion(:WaterActivity :Scuba_diving)
ClassAssertion(:Sea :Sea)
ClassAssertion(:SeaActivity :SeaActivity)
ClassAssertion(:ActivitiesExample :Sea_kayaking)
ClassAssertion(:SeaActivity :Sea_kayaking)
ClassAssertion(:ActivitiesExample :Serfing_internet)
ClassAssertion(:AudioVisualActivity :Serfing_internet)
ClassAssertion(:ActivitiesExample :Sewing)
ClassAssertion(:HousekeepingActivity :Sewing)
ClassAssertion(:Transportation :Ship)
ClassAssertion(:ShoeShop :ShoeShop)
ClassAssertion(:Shop :Shop)
ClassAssertion(:ShoppingActivity :ShoppingActivity)
ClassAssertion(:TemplateActivity :Shopping_at_the_mall)
DataPropertyAssertion(:hasDescription :Shopping_at_the_mall "Thiis week's shopping at the mall")
DataPropertyAssertion(:hasName :Shopping_at_the_mall "Shopping at the mall")
ClassAssertion(:ActivitiesExample :Singing)
ClassAssertion(:ArtActivity :Singing)
ClassAssertion(:SkiingActivity :SkiiingActivity)
ClassAssertion(:ActivitiesExample :Skiing)
ClassAssertion(:MountainActivity :Skiing)
ClassAssertion(:ActivitiesExample :Sky_diving)
ClassAssertion(:AeroActivity :Sky_diving)
ClassAssertion(:ActivitiesExample :Snorkeling)
ClassAssertion(:SeaActivity :Snorkeling)
ClassAssertion(:ActivitiesExample :Snowboarding)
ClassAssertion(:MountainActivity :Snowboarding)
ClassAssertion(:SocialActivity :SocialActivity)
ClassAssertion(:SolitaryActivity :SolitaryActivity)
ClassAssertion(:SportsActivity :SportsActivity)
ClassAssertion(:ActivitiesExample :Studying)
ClassAssertion(:EducationActivity :Studying)
ClassAssertion(:ActivitiesExample :Sunbathing)
ClassAssertion(:BeachActivity :Sunbathing)
ClassAssertion(:SuperMarket :SuperMarket)
ClassAssertion(:ActivitiesExample :SuperParadise)
ClassAssertion(:BeachBar :SuperParadise)
ObjectPropertyAssertion(:hasLocation :SuperParadise :spLocation)
DataPropertyAssertion(:hasName :SuperParadise "Super Paradise Beach Bar")
ClassAssertion(:ActivitiesExample :Surfing)
ClassAssertion(:SeaActivity :Surfing)
ClassAssertion(:ActivitiesExample :Sweeping)
ClassAssertion(:HousekeepingActivity :Sweeping)
ClassAssertion(:SwimmingActivity :SwimmingActivity)
ClassAssertion(:SwimmingPool :SwimmingPool)
ClassAssertion(:DayOfWeek :THURSDAY)
ClassAssertion(:DayOfWeek :TUESDAY)
ClassAssertion(:TableTennisActivity :TableTannisActivity)
ClassAssertion(:ActivitiesExample :Taking_exams)
ClassAssertion(:SchoolActivity :Taking_exams)
ClassAssertion(:Transportation :Taxi)
ClassAssertion(:TennisActivity :TennisActivity)
ClassAssertion(:TennisCourt :TennisCourt)
ClassAssertion(:Theater :Theater)
ClassAssertion(:Transportation :Train)
ClassAssertion(:Transportation :Tram)
ClassAssertion(:TravelActivity :TravelActivity)
ClassAssertion(:ActivitiesExample :Tree_climbing)
ClassAssertion(:ForestActivity :Tree_climbing)
ClassAssertion(:ActivitiesExample :Trekking)
ClassAssertion(:MountainActivity :Trekking)
ClassAssertion(:ActivitiesExample :Underwater_photography)
ClassAssertion(:WaterActivity :Underwater_photography)
ClassAssertion(:UniversityActivity :UniversityActivity)
ClassAssertion(:ActivitiesExample :Vacuuming)
ClassAssertion(:HousekeepingActivity :Vacuuming)
ClassAssertion(:ActivitiesExample :Video_game)
ClassAssertion(:GameActivity :Video_game)
ClassAssertion(:ActivitiesExample :VisitingArcheologicalSight)
ClassAssertion(:CulturalActivity :VisitingArcheologicalSight)
ClassAssertion(:ActivitiesExample :VisitingCinema)
ClassAssertion(:CulturalActivity :VisitingCinema)
ClassAssertion(:ActivitiesExample :VisitingMuseum)
ClassAssertion(:CulturalActivity :VisitingMuseum)
ClassAssertion(:ActivitiesExample :VisitingTheater)
ClassAssertion(:CulturalActivity :VisitingTheater)
ClassAssertion(:ActivitiesExample :Visiting_others)
ClassAssertion(:SocialActivity :Visiting_others)
ClassAssertion(:VolleyballActivity :VolleyballActivity)
ClassAssertion(:VolleyballCourt :VolleyballCourt)
ClassAssertion(:DayOfWeek :WEDNESDAY)
ClassAssertion(:WalkingActivity :WalkingActivity)
AnnotationAssertion(rdfs:comment :Wallet "Το πορτοφόλι μου για να πληρώσω το ταξί"@el)
ClassAssertion(owl:Thing :Wallet)
ClassAssertion(:ActivitiesExample :Watching_movie)
ClassAssertion(:AudioVisualActivity :Watching_movie)
ClassAssertion(:ActivitiesExample :Watching_tv)
ClassAssertion(:AudioVisualActivity :Watching_tv)
ClassAssertion(:Water :Water)
ClassAssertion(:WaterActivity :WaterActivity)
ClassAssertion(:WaterPark :WaterPark)
ClassAssertion(:ActivitiesExample :Waterskiing)
ClassAssertion(:SeaActivity :Waterskiing)
ClassAssertion(:ActivitiesExample :Wildlife_safari)
ClassAssertion(:ForestActivity :Wildlife_safari)
ClassAssertion(:ActivitiesExample :Windsurfing)
ClassAssertion(:SeaActivity :Windsurfing)
ClassAssertion(:WorkActivity :WorkActivity)
ClassAssertion(:WorkshopActivity :WorkshopActivity)
ClassAssertion(ObjectUnionOf(:ConferenceActivity :UniversityActivity :WorkshopActivity) :Writing_a_paper)
ClassAssertion(:ActivitiesExample :Writing_a_presentation)
ClassAssertion(:EducationActivity :Writing_a_presentation)
ClassAssertion(:ActivitiesExample :Yachting)
ClassAssertion(:SeaActivity :Yachting)
ClassAssertion(:IndoorVenue :indoorVenue)
ClassAssertion(:ActivitiesExample :inst1)
DataPropertyAssertion(:hasDate :inst1 "2012-09-14T17:00:00"^^xsd:dateTime)
ClassAssertion(:ActivitiesExample :inst2)
DataPropertyAssertion(:hasDate :inst2 "2012-09-14T19:00:00"^^xsd:dateTime)
ClassAssertion(:GeoLocation :posLocation)
DataPropertyAssertion(:hasLatitude :posLocation "22.949476"^^xsd:double)
DataPropertyAssertion(:hasLongitude :posLocation "40.596664"^^xsd:double)
ClassAssertion(:GeoLocation :spLocation)
DataPropertyAssertion(:hasLatitude :spLocation "25.356245"^^xsd:double)
DataPropertyAssertion(:hasLongitude :spLocation "37.412437"^^xsd:double)
DisjointClasses(:ArtSchoolActivity :AthleticSchoolActivity :ChurchSchoolActivity :MusicSchoolActivity)
DisjointClasses(:GeoLocation :Participant :SimpleActivity :Transportation :Venue)
DifferentIndividuals(:Bicycle :Boat :Bus :Car :Caravan :Metro :Motorcycle :OnFoot :Rollers :Ship :Taxi :Train :Tram)
DisjointClasses(:AeroActivity :BeachActivity :CulturalActivity :DesertActivity :ForestActivity :MountainActivity :WaterActivity)
DisjointClasses(:LakeActivity :RiverActivity :SeaActivity)
DisjointClasses(:BaseballActivity :BasketballActivity :CyclingActivity :FootballActivity :JoggingActivity :RunningActivity :SkiingActivity :SwimmingActivity :TableTennisActivity :TennisActivity :VolleyballActivity :WalkingActivity)
)